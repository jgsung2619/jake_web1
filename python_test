# # 파이썬 장비관리 프로그램 구현
# # [기본 기능] 0. 메뉴: 프로그램 실행시 다음과 같은 메뉴선택 창이 표시된다.
# 1) 메뉴양식: 사용자 입력을 받을 수 있도록 프로그램 실행시 아래와 같은 메뉴선택 창이 출력된다.
#  1. 입력 2. 출력 3. 검색 4. 종료 메뉴를 선택하시오:
import datetime

#######################################################
# Menu 1. 입력 함수
# 1.입력양식: inputData 함수를 구현하여 데이터를 입력하고
# 시퀀스 데이터타입을 이용하여 메모리에 저장한다.
# # 1)입력형식:
# 장비명:
# 수량:
# 생산일(예:1990-01-01): 계속입력하시겠습니까(y/n)?
# 2) 계속 입력하시겠습니까 메뉴에서 y 를 선택하면
# 1) 입력양식을 계속 반복하고 n 을 선택시 메뉴를 출력한다.
#######################################################
def inputData():
    exit = "y"
    while exit != "n":
        inputlist = []
        name = input("장비명: ")
        inputlist.append(name)
        total = input("수량: ")
        inputlist.append(total)
        date = input("생산일(예:1990-01-01): ")
        validate(date)
        inputlist.append(date)
        totallist.append(inputlist)
        # print(inputlist)
        # print(totallist)
        exit = input("계속입력하시겠습니까(y/n)?")


#######################################################
# Menu2. 출력 함수
# 2. 출력양식 : outputData 함수를 구현하여 메모리에
# 저장된 데이터를 출력한다
# 1) 출력형식:
# -----------------------------------------
# 장비명 수량 생산일
# -----------------------------------------
# xxxxxx x xxxx-xx-xx
# ………………..
#######################################################
def outputData():
    print("-----------------------------------------")
    print("장비명 수량 생산일")
    print("-----------------------------------------")
    for i in totallist:
        print(i)



#######################################################
# Menu3. 검색 함수
# 3. 검색양식: seachData 함수를 구현하여 메모리에 저장된 데이터를 검색한다.
# 1) 검색양식: 장비명을 검색하여 검색된 데이터를 출력한다.
# 검색할 장비명을 입력하세요:
#-------------------------------------------
#장비명 수량 생산일
# -------------------------------------------
#xxxxxx x xxxx-xx-xx
#######################################################
def searchData():
    search = input("검색할 장비명을 입력하세요: ")
    for i in totallist:
        if search == i[0]:
            print("-----------------------------------------")
            print("장비명 수량 생산일")
            print("-----------------------------------------")
            print(i)
        else:
            print("검색품이 없습니다!")

#######################################################
# 날짜 입력 형식에 대한 유효성 검수 함수
# 잘못된 형식의 날짜 입력시 error발생
#######################################################

def validate(date_text):
    try:
        datetime.datetime.strptime(date_text, '%Y-%m-%d')
    except ValueError:
        raise ValueError("Incorrect data format, should be YYYY-MM-DD")

#######################################################
# 메인함수
#######################################################
if __name__ == "__main__":
    totallist = []
    number = 0
    menu = '1. 입력\n2. 출력\n3. 검색\n4. 종료\n메뉴를 선택하시오:'
    while number != 5:
        print(menu)
        number = int(input())
        if number == 1:
            inputData()
        elif number == 2:
            outputData()
        elif number == 3:
            searchData()
        elif number == 4:
            terminate = input("프로그램을 종료하시겠습니까(y/n)?")
            if terminate == "y":
                break
            elif terminate == "n":
                continue

# # 요구사항
# # 3 / 3
# # ………………..
# # 4. 종료 양식: 프로그램을 종료한다 n 를 선택하면 메뉴를 출력한다.
# # 1) 종료형식:
# # 프로그램을 종료하시겠습니까(y/n)?
# # 요구사항
# # 제출방법
# # 1. ID.py 파일(정답 소스)
# # 2. 구현범위.txt(구현한 소스 및 구현 범위를 Text 파일로 작성 후 제출)
# # 3. 1, 2 번 파일을 압축 한 후 최종 제출
# # 4. 제출하는 파일명은 반드시 영문으로 작성한다.(한글 포함 시 채점 불가능)

제출방법
1. ID.py 파일(정답 소스)
2. 구현범위.txt(구현한 소스 및 구현 범위를 Text 파일로 작성 후 제출)
3. 1, 2 번 파일을 압축 한 후 최종 제출
4. 제출하는 파일명은 반드시 영문으로 작성한다.(한글 포함 시 채점 불가능)
